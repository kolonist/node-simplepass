// Generated by CoffeeScript 2.2.4
'use strict';
var events, simplepass;

events = require('events');

console.log('\nSTART TEST\n');

console.log('require lib');

simplepass = require('../lib/simplepass.coffee');

simplepass.open('test/passwd.tmp', function(err) {
  var count, emitter;
  console.log('open not existant passwords file');
  console.log('Error:', err);
  if (err == null) {
    emitter = new events.EventEmitter;
    count = 10;
    console.log('\nADD USERS\n');
    (function() { // 1
      var password, username;
      username = 'root';
      password = 'pA$$w0rD';
      return simplepass.add(username, password, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with no permissions`);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 2
      var password, permissions, username;
      username = 'user1';
      password = 'pA$$w0rD';
      permissions = [1, 0, 1, 0, 0, 1, 0];
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 3
      var password, permissions, username;
      username = 'user2';
      password = 'pA$$w0rD--2';
      permissions = [0, 0, 1, 1, 0, 0, 1];
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 4
      var password, permissions, username;
      username = 'user3';
      password = 'pA$$w0rD--3';
      permissions = 64;
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 5
      var password, permissions, username;
      username = 'user4';
      password = 'pA$$w0rD--4';
      permissions = 0;
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 6
      var password, permissions, username;
      username = 'user5';
      password = 'pA$$w0rD--5';
      permissions = 1;
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 7
      var password, permissions, username;
      username = 'user6';
      password = 'pA$$w0rD--6';
      permissions = [1, 1, 1, 1, 1, 1, 1];
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 8
      var password, permissions, username;
      username = 'user-21$';
      password = 'pA$$w0rD--6';
      permissions = [1, 1, 1, 1, 1, 1, 1];
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add wrong user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 9
      var password, permissions, username;
      username = 'user7';
      password = 'pA$$w0rD--7';
      permissions = [true, 0, 1, false, false, true, 0];
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    (function() { // 10
      var password, permissions, username;
      username = 'user8';
      password = 'pA$$w0rD--8';
      permissions = 25;
      return simplepass.add(username, password, permissions, function(err) {
        console.log(`add user \`${username}\` with password \`${password}\` and with permissions \`${permissions}\``);
        console.log('Error:', err);
        count--;
        return emitter.emit('useradded');
      });
    })();
    // authorize
    emitter.on('useradded', function() {
      // all users added
      if (count <= 0) {
        count = 4;
        console.log('\nAUTHORISATION\n');
        (function() { // 1
          var password, username;
          username = 'root';
          password = 'pA$$w0rD';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauth');
          });
        })();
        (function() { // 2
          var password, username;
          username = 'user7';
          password = 'pA$$w0rD--7';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauth');
          });
        })();
        (function() { // 3
          var password, username;
          username = 'user';
          password = 'password';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauth');
          });
        })();
        return (function() { // 4
          var password, username;
          username = 'root';
          password = 'pA$$w0rD2';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauth');
          });
        })();
      }
    });
    // authorize
    emitter.on('userauth', function() {
      // all authorisations passed
      if (count <= 0) {
        count = 4;
        console.log('\nREMOVE SOME USERS\n');
        (function() { // 1
          var username;
          username = 'user7';
          return simplepass.remove(username, function(err, removed) {
            console.log(`remove user \`${username}\`: ${removed}`);
            console.log('Error:', err);
            count--;
            return emitter.emit('usersremoved');
          });
        })();
        (function() { // 2
          var username;
          username = 'user5';
          return simplepass.remove(username, function(err, removed) {
            console.log(`remove user \`${username}\`: ${removed}`);
            console.log('Error:', err);
            count--;
            return emitter.emit('usersremoved');
          });
        })();
        (function() { // 3
          var username;
          username = 'user100500';
          return simplepass.remove(username, function(err, removed) {
            console.log(`remove user \`${username}\`: ${removed}`);
            console.log('Error:', err);
            count--;
            return emitter.emit('usersremoved');
          });
        })();
        return (function() { // 4
          var username;
          username = 'user2';
          return simplepass.remove(username, function(err, removed) {
            console.log(`remove user \`${username}\`: ${removed}`);
            console.log('Error:', err);
            count--;
            return emitter.emit('usersremoved');
          });
        })();
      }
    });
    // try authorize removed (not existing) user
    emitter.on('usersremoved', function() {
      if (count <= 0) {
        count = 2;
        console.log('\nAUTHORISATION REMOVED\n');
        (function() { // 1
          var password, username;
          username = 'user7';
          password = 'pA$$w0rD--7';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize removed user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauthremoved');
          });
        })();
        return (function() { // 2
          var password, username;
          username = 'user2';
          password = 'pA$$w0rD--2';
          return simplepass.auth(username, password, function(err, access) {
            console.log(`authorize removed user \`${username}\` with password \`${password}\``);
            console.log('Error:', err);
            console.log(`Access [${(access ? 'GRANTED' : 'DENIED')}]`);
            count--;
            return emitter.emit('userauthremoved');
          });
        })();
      }
    });
    // update something
    return emitter.on('userauthremoved', function() {
      // all authorisations passed
      if (count <= 0) {
        return console.log('\nUPDATE SMTH\n');
      }
    });
  }
});
